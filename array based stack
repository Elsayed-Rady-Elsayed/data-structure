#include<iostream>
using namespace std;
const int MAX_SIZE = 1000;
/// <summary>
/// stack imp
/// </array based stack>
/// LIFO (last in first out)
/// <returns>list of items</returns>
template<class T>
class stackByArray {
private:
	int top=-1;
	T arr[MAX_SIZE];
public:
	stackByArray() {
		top = -1;
	}
	void push(T value) {
		if (isFull()) {
			cout << "full array" << endl;
		}
		else {
			arr[++top] = value;
		}
	}
	T pop() {
		if (isEmpty()) {
			cout << "empty stack" << endl;
		}
		else {
			T popedValue = arr[top--];
			return popedValue;
		}
		return -1;
	}
	bool isEmpty() {
		return top == -1;
	}
	T peek() {
		if (isEmpty()) {
			cout << "empty stack" << endl;
			return -1;
		}
		else {
			return arr[top];
		}
	}
	bool isFull() {
		return top >= MAX_SIZE - 1;
	}
	void print() {
		cout << "[";
		for (int i = top; i >= 0; i--) {
			cout << arr[i] << " ";
		}
		cout << "]\n";
	}
};
int main() {
    stackByArray<int>stk;
    stk.push(1);
    stk.push(2);
    stk.push(3);
    stk.push(4);
    stk.push(5);
    stk.print();
    int x = stk.pop();
    cout<<x<<endl;
	return 0;
}
